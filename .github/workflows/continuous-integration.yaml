name: Continuous Integration

on:
  push:
    # only branch pushes, not tags
    # ignore hlx branches
    branches-ignore:
      - 'hlx/**'

jobs:
  install-and-cache-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node version from .nvmrc
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci --prefer-offline

  lint:
    runs-on: ubuntu-latest
    needs: install-and-cache-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Lint project
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: install-and-cache-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Run unit tests
        run: npm run test:ci

  build-doc:
      runs-on: ubuntu-latest
      needs: install-and-cache-deps
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Cache NPM dependencies
          uses: actions/cache@v4
          with:
            path: node_modules
            key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            restore-keys: ${{ runner.os }}-node-

        - name: Build doc
          run: npm run build:doc

  # on every push,
  # create a branch with the same name but prefixed with' hlx/'
  # where the dist folder is created after building the bundles, and pushed
  # this is needed by AEM Code Sync bot to deploy to its CDN
  build-hlx-branch:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: install-and-cache-deps
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create hlx branch
        run: |
          git switch --force-create hlx/${{ github.ref_name }}

      - name: Cache NPM dependencies
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-

      - name: Build project
        run: npm run build

      - name: Setup git user
        run: |
          git config --global user.name "EDS CI/CD"
          git config --global user.email "eds-ci@diva-e.com"

      - name: Add dist
        run: |
          git add --force ./dist

      - name: Commit and push dist
        run: |
          git commit --message="CI Build"
          git push --force
